using System;
using System.Collections;
using System.Collections.Generic;
using System.Drawing;
using System.Drawing.Imaging;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading;
using UnityEngine;
using UnityEngine.SceneManagement;
using Video.Model;
using Color = UnityEngine.Color;

namespace Assets.Scripts
{
    class Test_ScreenCapture : MonoBehaviour
    {
        private Material m;
        private int desktopwidth = 0;
        private int desktopheight = 0;
        private int orgindesktopwidth = 0;
        private int orgindesktopheight = 0;
        private int autosleeptime = 2;
        private int Milliseconds = 30;

        //public UnityEngine.UI.Image PlaneImage;

        void OnDestroy()
        {
            if (ct1 != null)
            {
                ct1.Abort();
            }
            if (ct2 != null)
            {
                ct2.Abort();
            }
            if (ct3 != null)
            {
                ct3.Abort();
            }
            if (bytelist.Count > 0)
            {
                for (int i = 0; i < bytelist.Count; i++)
                {
                    bytelist.RemoveAt(0);
                }
            }
        }

        private Thread ct1;
        private Thread ct2;
        private Thread ct3;
        void Start()
        {
            Application.targetFrameRate = -1;
            //UnityEngine.UI.Image PlaneImage = GetComponent<UnityEngine.UI.Image>();
            m = gameObject.GetComponent<Renderer>().material;
            Screen.fullScreen = false;
            //桌面赋值
            sc = new GdiScreenCapture();
            Image desktopImage = sc.CaptureWindowSBS();
            desktopwidth = desktopImage.Width;
            desktopheight = desktopImage.Height;
            orgindesktopwidth = desktopImage.Width;
            orgindesktopheight = desktopImage.Height;
            Debug.Log("Start");

            //新建线程
            ct1 = new Thread(CaptureWindowThread);
            ct1.Start();
            ct2 = new Thread(CaptureWindowThread);
            ct2.Start();
            //ct3 = new Thread(CaptureWindowThread);
            //ct3.Start();
        }

        private Texture2D texture;
        private GdiScreenCapture sc;
        void Update()
        {
            //UnityEngine.UI.Image PlaneImage = GetComponent<UnityEngine.UI.Image>();
            if (m)
            {
                Debug.Log("Update " + bytelist.Count + " " + autosleeptime);
                KeyDownEvent();
                if (texture == null)
                    texture = new Texture2D(desktopwidth, desktopheight);

                if (bytelist.Count > 0)
                {
                    var bimage = bytelist[0];
                    texture.LoadImage(bimage);
                    m.SetTexture("_MainTex", texture);
                    bytelist.RemoveAt(0);
                    bimage = null;
                }
            }
        }

        DateTime CaptureTime = DateTime.Now;
        List<byte[]> bytelist = new List<byte[]>();
        void CaptureWindowThread()
        {
            while (true)
            {
                //if (bytelist.Count == 0)
                //{
                //    autosleeptime -= 2;
                //}
                //else
                //{
                //    autosleeptime += 2;
                //}
                //用于控制每间隔n毫秒执行一次截图
                if (CaptureTime.AddMilliseconds(Milliseconds) <= DateTime.Now)
                {
                    CaptureTime = DateTime.Now;
                    var gsc = new GdiScreenCapture();
                    Image img1 = gsc.CaptureWindowSBS(desktopwidth, desktopheight);
                    var bimage = gsc.PhotoImageInsert(img1);
                    bytelist.Add(bimage);
                    img1.Dispose();
                    img1 = null;
                    Thread.Sleep(autosleeptime);
                }
                //else
                //{
                //    Thread.Sleep(autosleeptime);
                //}
            }
        }

        void KeyDownEvent()
        {
            if (Input.GetKeyDown(KeyCode.Alpha1))
            {
                m.SetInt("_ShowType", 1);
            }
            else if (Input.GetKeyDown(KeyCode.Alpha2))
            {
                m.SetInt("_ShowType", 2);
            }
            else if (Input.GetKeyDown(KeyCode.Alpha3))
            {
                m.SetInt("_ShowType", 3);
            }
            else if (Input.GetKeyDown(KeyCode.Alpha4))
            {
                m.SetInt("_ShowType", 4);
            }
            else if (Input.GetKeyDown(KeyCode.UpArrow))
            {
                gameObject.transform.localEulerAngles = new Vector3(gameObject.transform.localEulerAngles.x, gameObject.transform.localEulerAngles.y, gameObject.transform.localEulerAngles.z - 15);
            }
            else if (Input.GetKeyDown(KeyCode.DownArrow))
            {
                gameObject.transform.localEulerAngles = new Vector3(gameObject.transform.localEulerAngles.x, gameObject.transform.localEulerAngles.y, gameObject.transform.localEulerAngles.z + 15);
            }
            else if (Input.GetKeyDown(KeyCode.LeftArrow))
            {
                gameObject.transform.localEulerAngles = new Vector3(gameObject.transform.localEulerAngles.x, gameObject.transform.localEulerAngles.y - 15, gameObject.transform.localEulerAngles.z);
            }
            else if (Input.GetKeyDown(KeyCode.RightArrow))
            {
                gameObject.transform.localEulerAngles = new Vector3(gameObject.transform.localEulerAngles.x, gameObject.transform.localEulerAngles.y + 15, gameObject.transform.localEulerAngles.z);
            }
            else if (Input.GetKeyDown(KeyCode.Z))
            {
                Milliseconds += 4;
            }
            else if (Input.GetKeyDown(KeyCode.X))
            {
                Milliseconds -= 4;
            }
            //else if (Input.GetKeyDown(KeyCode.F4))
            //{
            //    Debug.Log("F4");
            //    var left = GameObject.Find("Left Camera");
            //    gameObject.transform.localEulerAngles = new Vector3(left.transform.localEulerAngles.x, left.transform.localEulerAngles.y - 45);
            //}
            else if (Input.GetKeyDown(KeyCode.F2))
            {
                Debug.Log("F2");
                SceneManager.LoadScene("PlaneSBSScene");
            }
            //else if (Input.GetKeyDown(KeyCode.F4))
            //{
            //    Debug.Log("F4");
            //    SceneManager.LoadScene("UVScene");
            //}
        }
        void End()
        {
        }
    }
}
